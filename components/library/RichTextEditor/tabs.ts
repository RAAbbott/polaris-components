// Auto-generated by scripts/generate-tabs.js
// DO NOT EDIT THIS FILE MANUALLY - Edit tabs.config.json instead and run: yarn generate-tabs

import { Tab } from '@/types';

export const tabs: Tab[] = [
  {
    "title": "Example Usage",
    "content": "import { BlockStack, Box, Card, Page, Text, SkeletonBodyText } from '@shopify/polaris';\nimport { useState } from 'react';\nimport 'react-quill/dist/quill.snow.css';\nimport { RichTextEditor } from './RichTextEditor';\n\nexport function Example() {\n  const [textEditor1, setTextEditor1] = useState('');\n  const [textEditor2, setTextEditor2] = useState('');\n  const [textEditor3, setTextEditor3] = useState('');\n  const [textEditor4, setTextEditor4] = useState('');\n  const [textEditor5, setTextEditor5] = useState('');\n  const [charCount, setCharCount] = useState(0);\n\n  function handleChangeWithCounter(value, editor) {\n    setCharCount(editor.getText().length);\n    setTextEditor4(value);\n  }\n\n  return (\n    <Page narrowWidth>\n      <Card>\n        <BlockStack gap='600'>\n          <RichTextEditor\n            label='Default Editor'\n            placeholder='Enter text...'\n            onChange={setTextEditor1}\n            value={textEditor1}\n          />\n          <RichTextEditor\n            label='Disabled / Busy Editor'\n            disabled\n            placeholder='Enter text...'\n            onChange={setTextEditor2}\n            value={textEditor2}\n          />\n          <RichTextEditor\n            label='Error State Editor'\n            placeholder='Enter text...'\n            onChange={setTextEditor3}\n            value={textEditor3}\n            error='You must enter more than 30 characters'\n          />\n          <Box>\n            <RichTextEditor\n              label='Editor with character count'\n              placeholder='Enter text...'\n              onChange={(value, delta, source, editor) => handleChangeWithCounter(value, editor)}\n              value={textEditor4}\n            />\n            <Text as='p'>Character count: {charCount}</Text>\n          </Box>\n          <RichTextEditor\n            label='Editor with controls modified'\n            placeholder='Enter text...'\n            onChange={setTextEditor5}\n            value={textEditor5}\n            modules={{\n              // See 'Modules' in Quill Documentation\n              toolbar: [\n                [{ header: [1, 2, 3, 4, false] }],\n                ['bold', 'italic', 'underline', 'blockquote'],\n                [{ list: 'ordered' }, { list: 'bullet' }, { indent: '-1' }, { indent: '+1' }],\n                [{ color: [] }, { background: [] }],\n                ['link'],\n                ['clean']\n              ]\n            }}\n          />\n          <BlockStack gap='100'>\n            <Text as='p'>Remix ClientOnly Fallback - loading...</Text>\n            <div className='quill'>\n              <Box padding='300' paddingBlockStart='400' paddingBlockEnd='1600'>\n                <SkeletonBodyText lines={6} />\n              </Box>\n            </div>\n          </BlockStack>\n        </BlockStack>\n      </Card>\n    </Page>\n  );\n}\n",
    "lang": "jsx"
  },
  {
    "title": "RichTextEditor.jsx",
    "content": "import { Box, Icon, InlineGrid, Text } from '@shopify/polaris';\nimport { AlertCircleIcon } from '@shopify/polaris-icons';\nimport Quill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\nconst defaultModuleOptions = {\n  toolbar: [\n    ['bold', 'italic', 'underline', 'blockquote'],\n    [{ list: 'ordered' }, { list: 'bullet' }, { indent: '-1' }, { indent: '+1' }],\n    ['link'],\n    ['clean']\n  ],\n  clipboard: {\n    matchVisual: false // Needed to avoid this glitch: https://github.com/slab/quill/issues/2905\n  }\n};\n\nexport function RichTextEditor({\n  bounds = '.quill',\n  defaultValue,\n  formats,\n  id,\n  modules,\n  onBlur,\n  onChange,\n  onChangeSelection,\n  onFocus,\n  onKeyDown,\n  onKeyPress,\n  onKeyUp,\n  placeholder,\n  preserveWhitespace,\n  value,\n  label,\n  labelHidden = false,\n  disabled,\n  error\n}) {\n  const mergedModuleOptions = {\n    ...defaultModuleOptions,\n    ...modules,\n    toolbar: modules?.toolbar || defaultModuleOptions.toolbar,\n    clipboard: {\n      ...defaultModuleOptions.clipboard,\n      ...(modules?.clipboard || {})\n    }\n  };\n\n  let className = disabled ? 'quill--disabled ' : '';\n  if (error) className += 'quill--error';\n\n  return (\n    <Box>\n      {!labelHidden && (\n        <Box paddingBlockEnd='100'>\n          <Text as='p' tone={disabled ? 'disabled' : 'base'}>\n            {label}\n          </Text>\n        </Box>\n      )}\n      <Quill\n        bounds={bounds}\n        className={className}\n        defaultValue={defaultValue}\n        formats={formats}\n        id={id}\n        modules={mergedModuleOptions}\n        onBlur={onBlur}\n        onChange={onChange}\n        onChangeSelection={onChangeSelection}\n        onFocus={onFocus}\n        onKeyDown={onKeyDown}\n        onKeyPress={onKeyPress}\n        onKeyUp={onKeyUp}\n        placeholder={placeholder}\n        preserveWhitespace={preserveWhitespace}\n        readOnly={disabled}\n        theme=\"snow\"\n        value={value}\n      />\n      {error && (\n        <InlineGrid alignItems='start' gap='150' columns='20px auto'>\n          <Icon source={AlertCircleIcon} tone='textCritical' />\n          <Text as='p' tone='critical'>\n            {error}\n          </Text>\n        </InlineGrid>\n      )}\n    </Box>\n  );\n}\n",
    "lang": "jsx"
  }
];
