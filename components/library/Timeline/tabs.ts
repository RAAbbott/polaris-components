// Auto-generated by scripts/generate-tabs.js
// DO NOT EDIT THIS FILE MANUALLY - Edit tabs.config.json instead and run: yarn generate-tabs

import { Tab } from '@/types';

export const tabs: Tab[] = [
  {
    "title": "Example Usage",
    "content": "import { Page, Badge, Layout, Box, Card } from '@shopify/polaris';\nimport Timeline from './Timeline';\n\nexport function Example() {\n  // Event timestamps must be in date order (ascending or descending)\n  // tone is optional\n  //  - critical and caution will use Alert indicator\n  //  - success will use Check indicator\n  //  - all other tones will use Chevron indicator with Polaris tone color applied\n  //  - undefined will show the Shopify-style timeline marker\n  // url is optional\n  // icon is optional\n  // timelineEvent will accept a string or a JSX.Element\n\n  const timelineItems = [\n    {\n      tone: 'base',\n      url: undefined,\n      timelineEvent: (\n        <>\n          A refund was processed for order <Badge>#1242</Badge>. An ARN was generated - 23587235897.\n        </>\n      ),\n      timestamp: new Date('2024-09-12T13:30:00')\n    },\n    {\n      tone: 'base',\n      icon: <img src='/timeline-icon_ricemill.png' width='16' height='16' />,\n      url: undefined,\n      timelineEvent: (\n        <>\n          Order <Badge>#1241</Badge> was successfully delivered. (Ricemill)\n        </>\n      ),\n      timestamp: new Date('2024-09-12T09:29:00')\n    },\n    {\n      tone: 'critical',\n      url: undefined,\n      timelineEvent: (\n        <>\n          Order <Badge>#1240</Badge> flagged for review due to suspicious activity.\n        </>\n      ),\n      timestamp: new Date('2024-09-11T15:00:00')\n    },\n    {\n      tone: 'success',\n      url: 'https://example.com/order/1235',\n      timelineEvent: (\n        <>\n          Order <Badge>#1235</Badge> shipped via Fedex.\n        </>\n      ),\n      timestamp: new Date('2024-09-11T14:59:00')\n    },\n    {\n      tone: 'base',\n      url: undefined,\n      timelineEvent: <>Customer logged in.</>,\n      timestamp: new Date('2024-09-11T09:44:00')\n    },\n    {\n      tone: 'base',\n      url: undefined,\n      timelineEvent: <>Failed login attempt detected.</>,\n      timestamp: new Date('2024-09-11T06:59:00')\n    },\n    {\n      tone: 'base',\n      url: undefined,\n      icon: <img src='/timeline-icon_loyalty.png' width='16' height='16' />,\n      timelineEvent: (\n        <>\n          Customer redeemed 50 reward points on an order <Badge>#1237</Badge> (LoyaltyPlus)\n        </>\n      ),\n      timestamp: new Date('2024-09-10T18:19:00')\n    },\n    {\n      tone: 'base',\n      url: undefined,\n      icon: <img src='/timeline-icon_loyalty.png' width='16' height='16' />,\n      timelineEvent: (\n        <>Customer earned 100 reward points for subscribing to your mailing list. (LoyaltyPlus)</>\n      ),\n      timestamp: new Date('2024-09-10T18:14:00')\n    },\n    {\n      tone: 'caution',\n      url: undefined,\n      timelineEvent: <>Account flagged for unusual activity.</>,\n      timestamp: new Date('2024-09-10T16:00:00')\n    },\n    {\n      tone: 'base',\n      url: 'https://example.com/fraud-check',\n      timelineEvent: (\n        <>\n          Fraud check was initiated for order <Badge>#1236</Badge>\n        </>\n      ),\n      timestamp: new Date('2024-09-10T12:10:00')\n    },\n    {\n      tone: 'base',\n      url: undefined,\n      timelineEvent: (\n        <>\n          Customer placed an order <Badge>#1234</Badge>\n        </>\n      ),\n      timestamp: new Date('2024-09-10T10:30:00')\n    },\n    {\n      tone: 'base',\n      url: undefined,\n      timelineEvent: (\n        <>\n          Customer placed order <Badge>#1239</Badge>\n        </>\n      ),\n      timestamp: new Date('2024-09-09T13:25:00')\n    },\n    {\n      tone: 'base',\n      url: 'https://example.com/points-earned',\n      timelineEvent: <>Customer earned 200 reward points after purchase.</>,\n      timestamp: new Date('2024-09-09T13:00:00')\n    },\n    {\n      tone: 'base',\n      url: undefined,\n      timelineEvent: <>Customer earned 100 reward points.</>,\n      timestamp: new Date('2024-09-09T11:30:00')\n    },\n    {\n      tone: 'base',\n      url: undefined,\n      timelineEvent: <>Customer contacted support regarding an issue with order.</>,\n      timestamp: new Date('2024-09-09T11:00:00')\n    },\n    {\n      tone: 'critical',\n      url: undefined,\n      icon: <img src='/timeline-icon_security.png' width='16' height='16' />,\n      timelineEvent: <>Customer flagged for fraud. (Securit√©)</>,\n      timestamp: new Date('2024-09-09T08:15:00')\n    },\n    {\n      tone: 'base',\n      url: undefined,\n      icon: <img src='/timeline-icon_ricemill.png' width='16' height='16' />,\n      timelineEvent: <>Customer updated their shipping address. (Ricemill)</>,\n      timestamp: new Date('2024-09-08T14:09:00')\n    },\n    {\n      tone: 'base',\n      url: undefined,\n      timelineEvent: <>Customer&apos;s email address was updated.</>,\n      timestamp: new Date('2024-09-08T12:44:00')\n    },\n    {\n      tone: 'base',\n      url: 'https://example.com/account-updated',\n      timelineEvent: <>Account details updated.</>,\n      timestamp: new Date('2024-09-08T11:19:00')\n    },\n    {\n      tone: 'base',\n      url: undefined,\n      timelineEvent: <>Customer subscribed to newsletter.</>,\n      timestamp: new Date('2024-09-07T09:29:00')\n    }\n  ];\n\n  return (\n    <Page narrowWidth>\n      <Layout>\n        <Layout.Section>\n          <Timeline items={timelineItems} />\n        </Layout.Section>\n      </Layout>\n    </Page>\n  );\n}\n",
    "lang": "jsx",
    "variant": "react"
  },
  {
    "title": "Timeline.jsx",
    "content": "import { BlockStack, Box, Icon, InlineGrid, InlineStack, Link, Text } from '@shopify/polaris';\nimport { Fragment } from 'react';\nimport {\n  AlertCircleIcon,\n  CheckCircleIcon,\n  ChevronRightIcon,\n  CircleChevronRightIcon\n} from '@shopify/polaris-icons';\nimport styles from './timeline.module.css';\n\nexport default function Timeline({ items }) {\n  function getBulletIconFromTone(tone) {\n    switch (tone) {\n      case 'critical':\n      case 'caution':\n        return AlertCircleIcon;\n      case 'success':\n        return CheckCircleIcon;\n      case 'base':\n      case undefined:\n        return null;\n      default:\n        return CircleChevronRightIcon;\n    }\n  }\n\n  let lastDate = null;\n\n  return (\n    <Box paddingInline={{ xs: '300', md: '0' }}>\n      <BlockStack gap='300'>\n        {items?.length ? (\n          items.map((item, index) => {\n            const currentDate = item.timestamp.toLocaleDateString([], {\n              year: 'numeric',\n              month: 'long',\n              day: 'numeric'\n            });\n            const showDate = currentDate !== lastDate;\n            lastDate = currentDate;\n            const bulletIcon = getBulletIconFromTone(item.tone);\n\n            return (\n              <Fragment key={index}>\n                {showDate && (\n                  <InlineGrid gap='200' columns='30px auto 90px'>\n                    <div>&nbsp;</div>\n                    <BlockStack gap='0'>\n                      <Box paddingBlockStart='600'>\n                        <Text alignment='start' as='h2' variant='bodySm' tone='subdued'>\n                          {currentDate}\n                        </Text>\n                      </Box>\n                    </BlockStack>\n                    <div>&nbsp;</div>\n                  </InlineGrid>\n                )}\n\n                <InlineGrid gap='200' columns='30px auto 90px' alignItems='center'>\n                  <div className={styles['timeline-icon']}>\n                    {item.tone === 'base' || !bulletIcon ? (\n                      <div className={styles['timeline-icon-base']}>\n                        <div className={styles['timeline-icon-base-inner']} />\n                      </div>\n                    ) : (\n                      <span className={styles['timeline-icon-polaris-icon']}>\n                        <Icon source={bulletIcon} tone={item.tone} />\n                      </span>\n                    )}\n                  </div>\n                  <Box className={styles['timeline-event-description']}>\n                    <InlineStack gap='200' wrap={false} blockAlign='center'>\n                      {item.icon}\n                      {item.url ? (\n                        <Link url={item.url} monochrome removeUnderline>\n                          <InlineStack gap='0' wrap={false} blockAlign='start'>\n                            <Box className={styles['timeline-event-link-main']}>\n                              {item.timelineEvent}\n                            </Box>\n                            <Icon source={ChevronRightIcon} />\n                          </InlineStack>\n                        </Link>\n                      ) : (\n                        <Box>{item.timelineEvent}</Box>\n                      )}\n                    </InlineStack>\n                  </Box>\n                  <Text as='p' alignment='end' tone='subdued' variant='bodySm'>\n                    {item.timestamp.toLocaleTimeString([], {\n                      hour: 'numeric',\n                      minute: '2-digit',\n                      hour12: true\n                    })}\n                  </Text>\n                </InlineGrid>\n              </Fragment>\n            );\n          })\n        ) : (\n          <Text as='p'>No timeline events available.</Text>\n        )}\n      </BlockStack>\n    </Box>\n  );\n}\n",
    "lang": "jsx",
    "variant": "react"
  },
  {
    "title": "timeline.module.css",
    "content": "/* You may need to tweak the three z-index values in your app, if you find content is hiding */\n\n.timeline-icon {\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 24px;\n  width: 24px;\n  margin-right: 10px;\n}\n\n.timeline-icon-polaris-icon {\n  z-index: 1;\n}\n\n.timeline-icon:before {\n  content: '';\n  position: absolute;\n  top: -40px;\n  bottom: -30px;\n  left: 50%;\n  transform: translateX(-50%);\n  width: 2px;\n  background-color: #dfe3e8;\n  z-index: 0;\n}\n\n.timeline-icon-base {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 16px;\n  height: 16px;\n  background-color: var(--p-color-border);\n  border-radius: 3px;\n  z-index: 1;\n}\n\n.timeline-icon-base-inner {\n  width: 8px;\n  height: 8px;\n  background-color: var(--p-color-icon);\n  border-radius: 3px;\n}\n\n.timeline-event-description .Polaris-Icon {\n  display: inline;\n  margin: 0;\n}\n\na:hover .timeline-event-link-main {\n  text-decoration: underline !important;\n}\n",
    "lang": "css",
    "variant": "react"
  },
  {
    "title": "Example Usage",
    "content": "import Timeline from './Timeline';\n\nexport function Example() {\n  // Event timestamps must be in date order (ascending or descending)\n  // tone is optional\n  //  - critical and caution will use Alert indicator\n  //  - success will use Check indicator\n  //  - all other tones will use Chevron indicator with Polaris tone color applied\n  //  - undefined will show the Shopify-style timeline marker\n  // url is optional\n  // icon is optional\n  // timelineEvent will accept a string or a JSX.Element\n\n  const timelineItems = [\n    {\n      tone: 'base',\n      url: undefined,\n      timelineEvent: (\n        <>\n          A refund was processed for order <span style={{ display: 'inline-block' }}><s-badge>#1242</s-badge></span>. An ARN was generated - 23587235897.\n        </>\n      ),\n      timestamp: new Date('2024-09-12T13:30:00')\n    },\n    {\n      tone: 'base',\n      icon: <img src='/timeline-icon_ricemill.png' width='16' height='16' />,\n      url: undefined,\n      timelineEvent: (\n        <>\n          Order <span style={{ display: 'inline-block' }}><s-badge>#1241</s-badge></span> was successfully delivered. (Ricemill)\n        </>\n      ),\n      timestamp: new Date('2024-09-12T09:29:00')\n    },\n    {\n      tone: 'critical',\n      url: undefined,\n      timelineEvent: (\n        <>\n          Order <span style={{ display: 'inline-block' }}><s-badge>#1240</s-badge></span> flagged for review due to suspicious activity.\n        </>\n      ),\n      timestamp: new Date('2024-09-11T15:00:00')\n    },\n    {\n      tone: 'success',\n      url: 'https://example.com/order/1235',\n      timelineEvent: (\n        <>\n          Order <span style={{ display: 'inline-block' }}><s-badge>#1235</s-badge></span> shipped via Fedex.\n        </>\n      ),\n      timestamp: new Date('2024-09-11T14:59:00')\n    },\n    {\n      tone: 'base',\n      url: undefined,\n      timelineEvent: <>Customer logged in.</>,\n      timestamp: new Date('2024-09-11T09:44:00')\n    },\n    {\n      tone: 'base',\n      url: undefined,\n      timelineEvent: <>Failed login attempt detected.</>,\n      timestamp: new Date('2024-09-11T06:59:00')\n    },\n    {\n      tone: 'base',\n      url: undefined,\n      icon: <img src='/timeline-icon_loyalty.png' width='16' height='16' />,\n      timelineEvent: (\n        <>\n          Customer redeemed 50 reward points on an order <span style={{ display: 'inline-block' }}><s-badge>#1237</s-badge></span> (LoyaltyPlus)\n        </>\n      ),\n      timestamp: new Date('2024-09-10T18:19:00')\n    },\n    {\n      tone: 'base',\n      url: undefined,\n      icon: <img src='/timeline-icon_loyalty.png' width='16' height='16' />,\n      timelineEvent: (\n        <>Customer earned 100 reward points for subscribing to your mailing list. (LoyaltyPlus)</>\n      ),\n      timestamp: new Date('2024-09-10T18:14:00')\n    },\n    {\n      tone: 'caution',\n      url: undefined,\n      timelineEvent: <>Account flagged for unusual activity.</>,\n      timestamp: new Date('2024-09-10T16:00:00')\n    },\n    {\n      tone: 'base',\n      url: 'https://example.com/fraud-check',\n      timelineEvent: (\n        <>\n          Fraud check was initiated for order <span style={{ display: 'inline-block' }}><s-badge>#1236</s-badge></span>\n        </>\n      ),\n      timestamp: new Date('2024-09-10T12:10:00')\n    },\n    {\n      tone: 'base',\n      url: undefined,\n      timelineEvent: (\n        <>\n          Customer placed an order <span style={{ display: 'inline-block' }}><s-badge>#1234</s-badge></span>\n        </>\n      ),\n      timestamp: new Date('2024-09-10T10:30:00')\n    },\n    {\n      tone: 'base',\n      url: undefined,\n      timelineEvent: (\n        <>\n          Customer placed order <span style={{ display: 'inline-block' }}><s-badge>#1239</s-badge></span>\n        </>\n      ),\n      timestamp: new Date('2024-09-09T13:25:00')\n    },\n    {\n      tone: 'base',\n      url: 'https://example.com/points-earned',\n      timelineEvent: <>Customer earned 200 reward points after purchase.</>,\n      timestamp: new Date('2024-09-09T13:00:00')\n    },\n    {\n      tone: 'base',\n      url: undefined,\n      timelineEvent: <>Customer earned 100 reward points.</>,\n      timestamp: new Date('2024-09-09T11:30:00')\n    },\n    {\n      tone: 'base',\n      url: undefined,\n      timelineEvent: <>Customer contacted support regarding an issue with order.</>,\n      timestamp: new Date('2024-09-09T11:00:00')\n    },\n    {\n      tone: 'critical',\n      url: undefined,\n      icon: <img src='/timeline-icon_security.png' width='16' height='16' />,\n      timelineEvent: <>Customer flagged for fraud. (Securit√©)</>,\n      timestamp: new Date('2024-09-09T08:15:00')\n    },\n    {\n      tone: 'base',\n      url: undefined,\n      icon: <img src='/timeline-icon_ricemill.png' width='16' height='16' />,\n      timelineEvent: <>Customer updated their shipping address. (Ricemill)</>,\n      timestamp: new Date('2024-09-08T14:09:00')\n    },\n    {\n      tone: 'base',\n      url: undefined,\n      timelineEvent: <>Customer&apos;s email address was updated.</>,\n      timestamp: new Date('2024-09-08T12:44:00')\n    },\n    {\n      tone: 'base',\n      url: 'https://example.com/account-updated',\n      timelineEvent: <>Account details updated.</>,\n      timestamp: new Date('2024-09-08T11:19:00')\n    },\n    {\n      tone: 'base',\n      url: undefined,\n      timelineEvent: <>Customer subscribed to newsletter.</>,\n      timestamp: new Date('2024-09-07T09:29:00')\n    }\n  ];\n\n  return (\n    <s-page inlineSize=\"small\">\n      <Timeline items={timelineItems} />\n    </s-page>\n  );\n}\n",
    "lang": "jsx",
    "variant": "web-components"
  },
  {
    "title": "Timeline.jsx",
    "content": "import { Fragment } from 'react';\nimport styles from './timeline.module.css';\n\nexport default function Timeline({ items }) {\n  function getBulletIconFromTone(tone) {\n    switch (tone) {\n      case 'critical':\n      case 'caution':\n        return { type: 'alert-circle', tone: tone };\n      case 'success':\n        return { type: 'check-circle', tone: 'success' };\n      case 'base':\n      case undefined:\n        return null;\n      default:\n        return { type: 'circle-chevron-right', tone: tone };\n    }\n  }\n\n  let lastDate = null;\n\n  return (\n    <s-box paddingInline=\"base\">\n      <s-stack direction=\"block\" gap=\"base\">\n        {items?.length ? (\n          items.map((item, index) => {\n            const currentDate = item.timestamp.toLocaleDateString([], {\n              year: 'numeric',\n              month: 'long',\n              day: 'numeric'\n            });\n            const showDate = currentDate !== lastDate;\n            lastDate = currentDate;\n            const bulletIcon = getBulletIconFromTone(item.tone);\n\n            return (\n              <Fragment key={index}>\n                {showDate && (\n                  <s-grid gridTemplateColumns=\"30px auto 90px\" columnGap=\"small\">\n                    <div>&nbsp;</div>\n                    <s-stack direction=\"block\" gap=\"none\">\n                      <s-box paddingBlockStart=\"base\">\n                        <s-text alignment=\"start\" color=\"subdued\">\n                          {currentDate}\n                        </s-text>\n                      </s-box>\n                    </s-stack>\n                    <div>&nbsp;</div>\n                  </s-grid>\n                )}\n\n                <s-grid gridTemplateColumns=\"30px auto 90px\" columnGap=\"small\">\n                  <div className={styles['timeline-icon']}>\n                    {item.tone === 'base' || !bulletIcon ? (\n                      <div className={styles['timeline-icon-base']}>\n                        <div className={styles['timeline-icon-base-inner']} />\n                      </div>\n                    ) : (\n                      <span className={styles['timeline-icon-polaris-icon']}>\n                        <s-icon type={bulletIcon.type} tone={bulletIcon.tone} />\n                      </span>\n                    )}\n                  </div>\n                  <div className={styles['timeline-event-description']}>\n                    <div style={{ display: 'inline-flex', alignItems: 'center', gap: '8px' }}>\n                      {item.icon}\n                      {item.url ? (\n                        <s-link url={item.url} monochrome removeUnderline>\n                          <s-stack direction=\"inline\" gap=\"none\" wrap={false} alignItems=\"start\">\n                            <span className={styles['timeline-event-link-main']}>\n                              {item.timelineEvent}\n                            </span>\n                            <s-icon type=\"chevron-right\" />\n                          </s-stack>\n                        </s-link>\n                      ) : (\n                        <s-text>{item.timelineEvent}</s-text>\n                      )}\n                    </div>\n                  </div>\n                  <s-text alignment=\"end\" color=\"subdued\">\n                    {item.timestamp.toLocaleTimeString([], {\n                      hour: 'numeric',\n                      minute: '2-digit',\n                      hour12: true\n                    })}\n                  </s-text>\n                </s-grid>\n              </Fragment>\n            );\n          })\n        ) : (\n          <s-text>No timeline events available.</s-text>\n        )}\n      </s-stack>\n    </s-box>\n  );\n}\n",
    "lang": "jsx",
    "variant": "web-components"
  },
  {
    "title": "timeline.module.css",
    "content": "/* You may need to tweak the three z-index values in your app, if you find content is hiding */\n\n.timeline-icon {\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 24px;\n  width: 24px;\n  margin-right: 10px;\n}\n\n.timeline-icon-polaris-icon {\n  z-index: 1;\n}\n\n.timeline-icon:before {\n  content: '';\n  position: absolute;\n  top: -40px;\n  bottom: -30px;\n  left: 50%;\n  transform: translateX(-50%);\n  width: 2px;\n  background-color: #dfe3e8;\n  z-index: 0;\n}\n\n.timeline-icon-base {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 16px;\n  height: 16px;\n  background-color: var(--p-color-border);\n  border-radius: 3px;\n  z-index: 1;\n}\n\n.timeline-icon-base-inner {\n  width: 8px;\n  height: 8px;\n  background-color: var(--p-color-icon);\n  border-radius: 3px;\n}\n\n.timeline-event-description s-icon {\n  display: inline;\n  margin: 0;\n}\n\na:hover .timeline-event-link-main {\n  text-decoration: underline !important;\n}\n",
    "lang": "css",
    "variant": "web-components"
  }
];
