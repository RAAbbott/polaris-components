// Auto-generated by scripts/generate-tabs.js
// DO NOT EDIT THIS FILE MANUALLY - Edit tabs.config.json instead and run: yarn generate-tabs

import { Tab } from '@/types';

export const tabs: Tab[] = [
  {
    "title": "Example Usage",
    "content": "import { Layout, Page, Grid, Text, BlockStack, Box } from '@shopify/polaris';\nimport { StatBox } from './StatBox';\n\nexport const Example = () => {\n  // Each array represents the values for the past 7 days including today\n  const stats = {\n    orders: [13, 20, 18, 5, 8, 15, 23],\n    reviews: [3, 3, 5, 6, 5, 2, 8],\n    returns: [5, 6, 5, 8, 4, 3, 1]\n  };\n\n  return (\n    <Page>\n      <Layout>\n        <Layout.Section>\n          <Box padding='200'>\n            <BlockStack gap='100'>\n              <Text variant='headingMd'>Daily Stats Example</Text>\n              <Text variant='bodySm' tone='subdued'>\n                Shows rate of change from first entry of chart data to today\n              </Text>\n            </BlockStack>\n          </Box>\n        </Layout.Section>\n        <Layout.Section>\n          <Grid columns={3}>\n            <Grid.Cell columnSpan={{ xs: 6, lg: 4 }}>\n              <StatBox title='Orders' value={stats.orders.at(-1)} data={stats.orders} />\n            </Grid.Cell>\n            <Grid.Cell columnSpan={{ xs: 6, lg: 4 }}>\n              <StatBox title='Reviews' value={stats.reviews.at(-1)} data={stats.reviews} />\n            </Grid.Cell>\n            <Grid.Cell columnSpan={{ xs: 6, lg: 4 }}>\n              <StatBox title='Returns' value={stats.returns.at(-1)} data={stats.returns} />\n            </Grid.Cell>\n          </Grid>\n        </Layout.Section>\n      </Layout>\n    </Page>\n  );\n};\n",
    "lang": "jsx"
  },
  {
    "title": "StatBox.jsx",
    "content": "// IMPORTANT: If using this component in Remix, you must wrap it in the <ClientOnly> component from the remix-utils package\n\nimport { Card, Text, Box } from '@shopify/polaris';\nimport { ArrowUpIcon, ArrowDownIcon } from '@shopify/polaris-icons';\nimport { SparkLineChart } from '@shopify/polaris-viz';\nimport '@shopify/polaris-viz/build/esm/styles.css';\n\nexport const StatBox = ({ title, value, data = [] }) => {\n  const hasData = data && data.length;\n  const percentageChange = hasData\n    ? getPercentageChange(Number(data[0]), Number(data.at(-1)))\n    : null;\n\n  return (\n    <Card padding='0'>\n      <Box paddingBlock='400' paddingInlineStart='400'>\n        <div\n          style={{\n            height: 65,\n            position: 'relative',\n            width: '100%',\n            display: 'flex',\n            justifyContent: 'space-between'\n          }}\n        >\n          <div\n            style={{\n              display: 'flex',\n              flexDirection: 'column',\n              justifyContent: 'end',\n              minWidth: 30\n            }}\n          >\n            <div\n              style={{\n                position: 'absolute',\n                top: -8,\n                left: -2,\n                zIndex: 20\n              }}\n            >\n              <Text as='p' variant='headingSm'>\n                {title}\n              </Text>\n            </div>\n            <Text as='h2' variant='headingLg' fontWeight='bold'>\n              {value}\n            </Text>\n            <div style={{ display: 'flex', alignItems: 'center', marginBottom: -4 }}>\n              {percentageChange ? (\n                percentageChange > 0 ? (\n                  <ArrowUpIcon style={{ height: 12, width: 12 }} fill={'green'} />\n                ) : (\n                  <ArrowDownIcon style={{ height: 12, width: 12 }} fill={'red'} />\n                )\n              ) : null}\n              <Text variant='bodySm' tone='subdued'>\n                <span\n                  style={\n                    percentageChange\n                      ? {\n                          color: percentageChange > 0 ? 'green' : 'red'\n                        }\n                      : undefined\n                  }\n                >\n                  {Math.abs(percentageChange) || '-'}%\n                </span>\n              </Text>\n            </div>\n          </div>\n          {hasData ? (\n            <div style={{ flex: 1, width: '50%', height: '80%', alignSelf: 'end' }}>\n              <SparkLineChart offsetLeft={4} offsetRight={0} data={formatChartData(data)} />\n            </div>\n          ) : null}\n        </div>\n      </Box>\n    </Card>\n  );\n};\n\n// Formats number array to expected format from polaris-viz chart\nconst formatChartData = (values = []) => {\n  return [{ data: values?.map((stat, idx) => ({ key: idx, value: stat })) }];\n};\n\n// Gets rate of change based on first + last entry in chart data\nconst getPercentageChange = (start = 0, end = 0) => {\n  if (isNaN(start) || isNaN(end)) return null;\n\n  const percentage = (((end - start) / start) * 100).toFixed(0);\n\n  if (percentage > 999) {\n    return 999;\n  }\n\n  if (percentage < -999) {\n    return -999;\n  }\n\n  return percentage;\n};\n",
    "lang": "jsx"
  }
];
